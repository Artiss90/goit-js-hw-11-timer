// import { Theme } from './js/task';
// import menuTemplate from './templates/template-menu.hbs';
// import menuData from './menu.json';
import './styles.css';
// import BSN from 'bootstrap.native';




// class Timer {
//   constructor({onTick}){
//     this.intervalId = null;
//     this.isActive = false;
//     this.onTick = onTick;
//     this.init();
//   }

//   init() {
//     const clock = this.getTimeComponents(0);
//     this.onTick(clock);
//   }

//   start() {
//   if (this.isActive) { return }

//   const startTime = Date.now();
//    this.isActive = true;
//    this.intervalId = setInterval(() => {
//       const currentTime = Date.now();
//       const deltaTime = currentTime - startTime;
//       const clock = this.getTimeComponents(deltaTime);
//      console.log(clock);
//      this.onTick(clock);
//     }, 1000);
//   }

//   stop() {
//     clearInterval(this.intervalId);
//     this.isActive = false;

//     const clock = this.getTimeComponents(0);
//     this.onTick(clock);}

//  /*
//  * - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
//    * - –í—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤ –Ω–∏—Ö –≤–º–µ—â–∞–µ—Ç—Å—è —á–∞—Å–æ–≤/–º–∏–Ω—É—Ç/—Å–µ–∫—É–Ω–¥
//    * - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—å–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ hours, mins, secs
//    * - –ê–¥—Å–∫–∞—è –∫–æ–ø–∏–ø–∞—Å—Ç–∞ —Å–æ —Å—Ç–µ–∫–∞ üí©
//    */
//   getTimeComponents(time) {
//     const hours = this.pad( Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));
//     const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));
//     const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));

//     return { hours, mins, secs };
// }

//   /*
//    * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ, –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç—Ä–æ–∫–µ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ 0 –µ—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 2-—Ö –∑–Ω–∞–∫–æ–≤
//    */
//  pad(value) {
//     return String(value).padStart(2, '0');
// }
// };

// const timer = new Timer({ onTick: updateClockface});

// /*
// * - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
//  * - –í—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤ –Ω–∏—Ö –≤–º–µ—â–∞–µ—Ç—Å—è —á–∞—Å–æ–≤/–º–∏–Ω—É—Ç/—Å–µ–∫—É–Ω–¥
//  * - –†–∏—Å—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
//  */
// function updateClockface({ hours, mins, secs }) {
//   refs.clockface.textContent = `${hours}:${mins}:${secs}`;
// }

// // –í–µ—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è
//   refs.startBtn.addEventListener('click', timer.start.bind(timer));
//   refs.stopBtn.addEventListener('click', timer.stop.bind(timer));

const refs = {
  timer: document.querySelector('#timer-1'),
};

const forthcomingDate = new Date('2021,01,01,00:00:00');

class CountdownTimer{
  constructor( {selector,
  targetDate}) {
    this.selector = selector;
    this.targetDate = targetDate;
    this.getCountdown();
  }

  getCountdown() {
    setInterval(() => {
      const deltaTime = this.targetDate - Date.now();
      const countdown = this.getTimeComponents(deltaTime);
      this.writeCountdown(countdown)
    }, 1000)
  }

  writeCountdown({days, hours, mins, secs}) {
      this.selector.querySelector('[data-value="days"]').textContent = `${days}`,
      this.selector.querySelector('[data-value="hours"]').textContent =`${hours}`,
      this.selector.querySelector('[data-value="mins"]').textContent = `${mins}`,
      this.selector.querySelector('[data-value="secs"]').textContent = `${secs}`
  }

  getTimeComponents(time) {
/*
 * –û—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏: –¥–µ–ª–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ UTC –Ω–∞ 1000 * 60 * 60 * 24, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
 * –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –≤ –æ–¥–Ω–æ–º –¥–Ω–µ (–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã * —Å–µ–∫—É–Ω–¥—ã * –º–∏–Ω—É—Ç—ã * —á–∞—Å—ã)
 */
const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));

/*
 * –û—Å—Ç–∞–≤—à–∏–µ—Å—è —á–∞—Å—ã: –ø–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
 * –æ—Å—Ç–∞—Ç–∫–∞ % –∏ –¥–µ–ª–∏–º –µ–≥–æ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –≤ –æ–¥–Ω–æ–º —á–∞—Å–µ
 * (1000 * 60 * 60 = –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã * –º–∏–Ω—É—Ç—ã * —Å–µ–∫—É–Ω–¥—ã)
 */
const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));

/*
 * –û—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∏–Ω—É—Ç—ã: –ø–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∏–Ω—É—Ç—ã –∏ –¥–µ–ª–∏–º –∏—Ö –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
 * –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –≤ –æ–¥–Ω–æ–π –º–∏–Ω—É—Ç–µ (1000 * 60 = –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã * —Å–µ–∫—É–Ω–¥—ã)
 */
const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));

/*
 * –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å–µ–∫—É–Ω–¥—ã: –ø–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Å–µ–∫—É–Ω–¥—ã –∏ –¥–µ–ª–∏–º –∏—Ö –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
 * –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –≤ –æ–¥–Ω–æ–π —Å–µ–∫—É–Ω–¥–µ (1000)
 */
const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));
    return { days,hours, mins, secs };
}

  /*
   * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ, –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç—Ä–æ–∫–µ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ 0 –µ—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 2-—Ö –∑–Ω–∞–∫–æ–≤
   */
pad(value) {
    return String(value).padStart(2, '0');
}
}


const timer = new CountdownTimer({
  selector: refs.timer,
  targetDate: forthcomingDate
});